<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ecard.mapper.ConsumePresentsMapper">
<!-- 查询 指定会员级别在指定活动类型下是否已经存在数据 -->
<select id="isExistsTheActivityRecord" parameterType="com.ecard.entity.ConsumePresentsActivityEntity" resultType="int">
  select count(strActivityId) from tb_consumePresents_Activity where strActivityName=#{strActivityName} and strLevelsId=#{strLevelsId} and iActivityKinds=#{iActivityKinds}
</select>

<!-- 新增消费赠送活动规则信息_[tableName:tb_consumePresents_Activity] -->
<insert id="insertConsumePresentsActivityEntity" parameterType="com.ecard.entity.ConsumePresentsActivityEntity">
 insert into tb_consumePresents_Activity
	(
	strActivityId,
	strActivityName,
	strLevelsId,
	strActivityBeginTime,
	strActivityEndTime,
	iActivityKinds,
	strIsCumulation,
	strEmployeeId,
	strEmployeeName,
	strEmployeeRealName,
	strCreationTime,
	strLastAccessedTime
	)
	values
	(
	#{strActivityId},
	#{strActivityName},
	#{strLevelsId},
	#{strActivityBeginTime},
	#{strActivityEndTime},
	#{iActivityKinds},
	#{strIsCumulation},
	#{strEmployeeId},
	#{strEmployeeName},
	#{strEmployeeRealName},
	#{strCreationTime},
	#{strLastAccessedTime}
	)
</insert>


<!-- 修改活动信息判断该会员级别在该活动类型下是否已经存在规则数据 -->
<select id="isExistsTheActivityRecordId" parameterType="com.ecard.entity.ConsumePresentsActivityEntity" resultType="String">
	select strActivityId from tb_consumePresents_Activity where strActivityName=#{strActivityName} and strLevelsId=#{strLevelsId} and iActivityKinds=#{iActivityKinds}
</select>

<!-- 更新消费赠送活动规则信息_[tableName:tb_consumePresents_Activity] -->
<update id="updateConsumePresentsActivityInfo" parameterType="com.ecard.entity.ConsumePresentsActivityEntity">
 update tb_consumePresents_Activity set 
	strActivityId=#{strActivityId},
	strActivityName=#{strActivityName},
	strLevelsId=#{strLevelsId},
	strActivityBeginTime=#{strActivityBeginTime},
	strActivityEndTime=#{strActivityEndTime},
	iActivityKinds=#{iActivityKinds},
	strIsCumulation=#{strIsCumulation},
	strEmployeeId=#{strEmployeeId},
	strEmployeeName=#{strEmployeeName},
	strEmployeeRealName=#{strEmployeeRealName},
	strLastAccessedTime=#{strLastAccessedTime}
	where strActivityId=#{strActivityId}
</update>

<!-- 查询消费赠送活动规则信息_[tableName:tb_consumePresents_Activity] -->
<select id="selectConsumePresentsActivityEntity" resultType="com.ecard.entity.ConsumePresentsActivityEntity" parameterType="String">
 select 
 	strActivityId,
 	strActivityName,
 	strLevelsId,
 	strActivityBeginTime,
 	strActivityEndTime,
 	iActivityKinds,
 	strIsCumulation,
 	strEmployeeId,
 	strEmployeeName,
 	strEmployeeRealName,
 	strCreationTime,
 	strLastAccessedTime
 	from tb_consumePresents_Activity
	where strActivityId=#{strActivityId}
</select>

<!-- 查询刚新建的一条消费赠送活动规则信息_[tableName:tb_consumePresents_Activity] -->
<select id="selectConsumePresentsActivityInfo" resultType="com.ecard.entity.ConsumePresentsActivityEntity">
 select 
 	strActivityId,
 	strActivityName,
 	strLevelsId,
 	strActivityBeginTime,
 	strActivityEndTime,
 	iActivityKinds,
 	strIsCumulation,
 	strEmployeeId,
 	strEmployeeName,
 	strEmployeeRealName,
 	strCreationTime,
 	strLastAccessedTime
 	from tb_consumePresents_Activity order by strCreationTime DESC limit 0,1
</select>

<!-- 新增消费赠送积分规则信息_[tableName:tb_consumePresents_integration] -->
<insert id="batchInsertConsumePresentsIntegrationEntity" parameterType="com.ecard.entity.ConsumePresentsIntegrationEntity">
 insert into tb_consumePresents_integration
	(
	strIntegrationId,
	strActivityId,
	dConsumeCashAmount,
	iPresentsIntegrationAmount,
	iEnabled,
	strEmployeeId,
	strEmployeeName,
	strEmployeeRealName,
	strCreationTime,
	strLastAccessedTime
	)
	values
	(
	#{strIntegrationId},
	#{strActivityId},
	#{dConsumeCashAmount},
	#{iPresentsIntegrationAmount},
	#{iEnabled},
	#{strEmployeeId},
	#{strEmployeeName},
	#{strEmployeeRealName},
	#{strCreationTime},
	#{strLastAccessedTime}
	)
</insert>

<!-- 更新消费赠送积分规则信息_[tableName:tb_consumePresents_integration] -->
<update id="batchUpdateConsumePresentsIntegrationEntity" parameterType="com.ecard.entity.ConsumePresentsIntegrationEntity">
 update tb_consumePresents_integration set 
	strActivityId=#{strActivityId},
	dConsumeCashAmount=#{dConsumeCashAmount},
	iPresentsIntegrationAmount=#{iPresentsIntegrationAmount},
	iEnabled=#{iEnabled},
	strEmployeeId=#{strEmployeeId},
	strEmployeeName=#{strEmployeeName},
	strEmployeeRealName=#{strEmployeeRealName},
	strLastAccessedTime=#{strLastAccessedTime}
	where strIntegrationId=#{strIntegrationId}
</update>

<!-- 删除消费赠送积分规则信息_[tableName:tb_consumePresents_integration] -->
<delete id="deleteConsumePresentsIntegrationEntity" parameterType="String">
 delete from tb_consumePresents_integration where strIntegrationId=#{strIntegrationId}
</delete>

<!-- 查询消费赠送积分规则信息_[tableName:tb_rechargePresents_storedValue] -->
<select id="selectAllConsumePresentsIntegrationEntity" resultType="com.ecard.entity.ConsumePresentsIntegrationEntity" parameterType="String">
 select 
 	strIntegrationId,
 	strActivityId,
 	dConsumeCashAmount,
 	iPresentsIntegrationAmount,
 	iEnabled,
 	strEmployeeId,
 	strEmployeeName,
 	strEmployeeRealName,
 	strCreationTime,
 	strLastAccessedTime
 	from tb_consumePresents_integration
	where strActivityId=#{strActivityId} order by strCreationTime DESC
</select>

<!-- 新增消费赠送储值规则信息_[tableName:tb_consumePresents_storedValue] -->
<insert id="batchInsertConsumePresentsStoredValueEntity" parameterType="com.ecard.entity.ConsumePresentsStoredValueEntity">
 insert into tb_consumePresents_storedValue
	(
	strStoredTicketId,
	strActivityId,
	dConsumeCashAmount,
	iPresentsIntegrationAmount,
	iEnabled,
	strEmployeeId,
	strEmployeeName,
	strEmployeeRealName,
	strCreationTime,
	strLastAccessedTime
	)
	values
	(
	#{strStoredTicketId},
	#{strActivityId},
	#{dConsumeCashAmount},
	#{iPresentsIntegrationAmount},
	#{iEnabled},
	#{strEmployeeId},
	#{strEmployeeName},
	#{strEmployeeRealName},
	#{strCreationTime},
	#{strLastAccessedTime}
	)
</insert>

<!-- 更新消费赠送储值规则信息_[tableName:tb_consumePresents_storedValue] -->
<update id="batchUpdateConsumePresentsStoredValueEntity" parameterType="com.ecard.entity.ConsumePresentsStoredValueEntity">
 update tb_consumePresents_storedValue set 
	strActivityId=#{strActivityId},
	dConsumeCashAmount=#{dConsumeCashAmount},
	iPresentsIntegrationAmount=#{iPresentsIntegrationAmount},
	iEnabled=#{iEnabled},
	strEmployeeId=#{strEmployeeId},
	strEmployeeName=#{strEmployeeName},
	strEmployeeRealName=#{strEmployeeRealName},
	strLastAccessedTime=#{strLastAccessedTime}
	where strStoredTicketId=#{strStoredTicketId}
</update>

<!-- 删除消费赠送储值规则信息_[tableName:tb_consumePresents_storedValue] -->
<delete id="deleteConsumePresentsStoredValueEntity" parameterType="String">
 delete from tb_consumePresents_storedValue where strStoredTicketId=#{strStoredTicketId}
</delete>

<!-- 查询消费赠送储值规则信息_[tableName:tb_consumePresents_storedValue] -->
<select id="selectAllConsumePresentsStoredValueEntity" resultType="com.ecard.entity.ConsumePresentsStoredValueEntity" parameterType="String">
 select 
 	strStoredTicketId,
 	strActivityId,
 	dConsumeCashAmount,
 	iPresentsIntegrationAmount,
 	iEnabled,
 	strEmployeeId,
 	strEmployeeName,
 	strEmployeeRealName,
 	strCreationTime,
 	strLastAccessedTime
 	from tb_consumePresents_storedValue
	where strActivityId=#{strActivityId} order by strCreationTime DESC
</select>
</mapper>