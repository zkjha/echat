<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ecard.mapper.RechargePresentsMapper">

<!-- 批量新增充值赠送抵用券信息 -->

<insert id="batchInsertRechargePresentsVoucher" parameterType="list">
 insert into tb_rechargePresents_voucher
	(
	strRechargePresentsVoucherId,
	strBasePresentsVoucherTicketId,
	strMorePresentsVoucherTicketId,
	strActivityId,
	dMinimumRechargeAmount,
	iMinimumPresentsVoucherNumber,
	dMoreRechargeAmount,
	iMoreRresentsVoucherNumber,
	iEnabled,
	strEmployeeId,
	strEmployeeName,
	strEmployeeRealName,
	strCreationTime,
	strLastAccessedTime
	)
	values
<foreach collection="listRechargePresentsVoucherEntity" item="entity" index="index" separator=",">

 (
	#{entity.strRechargePresentsVoucherId},
	#{entity.strBasePresentsVoucherTicketId},
	#{entity.strMorePresentsVoucherTicketId},
	#{entity.strActivityId},
	#{entity.dMinimumRechargeAmount},
	#{entity.iMinimumPresentsVoucherNumber},
	#{entity.dMoreRechargeAmount},
	#{entity.iMoreRresentsVoucherNumber},
	#{entity.iEnabled},
	#{entity.strEmployeeId},
	#{entity.strEmployeeName},
	#{entity.strEmployeeRealName},
	#{entity.strCreationTime},
	#{entity.strLastAccessedTime}
	)
 </foreach>
</insert>

<!-- 更新 充值赠送抵用券信息 -->
<update id="updateRechargePresentsVoucher" parameterType="com.ecard.entity.RechargePresentsVoucherEntity">
 update tb_rechargePresents_voucher set 
	strBasePresentsVoucherTicketId=#{strBasePresentsVoucherTicketId},
	strMorePresentsVoucherTicketId=#{strMorePresentsVoucherTicketId},
	strActivityId=#{strActivityId},
	dMinimumRechargeAmount=#{dMinimumRechargeAmount},
	iMinimumPresentsVoucherNumber=#{iMinimumPresentsVoucherNumber},
	dMoreRechargeAmount=#{dMoreRechargeAmount},
	iMoreRresentsVoucherNumber=#{iMoreRresentsVoucherNumber},
	iEnabled=#{iEnabled},
	strEmployeeId=#{strEmployeeId},
	strEmployeeName=#{strEmployeeName},
	strEmployeeRealName=#{strEmployeeRealName},
	strLastAccessedTime=#{strLastAccessedTime}
 	where strRechargePresentsVoucherId=#{strRechargePresentsVoucherId}
</update>

<!-- 删除 充值赠送抵用券信息 -->
<delete id="deleteRechargePresentsVoucher" parameterType="String">
	delete from tb_rechargePresents_voucher where strRechargePresentsVoucherId=#{strRechargePresentsVoucherId}
</delete>

<!-- 查询 充值 赠送抵用券信息 -->
<select id="selectAllRechargePresentsVoucher" resultType="com.ecard.entity.RechargePresentsVoucherEntity" parameterType="String">
 select 
 	strRechargePresentsVoucherId,
 	strBasePresentsVoucherTicketId,
 	strMorePresentsVoucherTicketId,
 	strActivityId,
 	dMinimumRechargeAmount,
 	iMinimumPresentsVoucherNumber,
 	dMoreRechargeAmount,
 	iMinimumPresentsVoucherNumber,
 	iEnabled,
 	strEmployeeId,
 	strEmployeeName,
 	strEmployeeRealName,
 	strCreationTime,
 	strLastAccessedTime
 	from tb_rechargePresents_voucher
	where strActivityId=#{strActivityId} order by strCreationTime DESC
</select>

<!-- 新增 充值送储值信息 -->
<insert id="batchInsertRechargePresentsStoredValue" parameterType="list">
	insert into tb_rechargePresents_storedValue
	(
	strPresentsStoredValueId,
	strActivityId,
	dRechargeAmount,
	dPresentsAmount,
	strValidateBeginTime,
	strValidateEndTime,
	iEnabled,
	strEmployeeId,
 	strEmployeeName,
 	strEmployeeRealName,
 	strCreationTime,
 	strLastAccessedTime
	)
	values
	<foreach collection="listRechargePresentsStoredValueEntity" item="entity" index="index" separator=",">
	(
	#{entity.strPresentsStoredValueId},
	#{entity.strActivityId},
	#{entity.dRechargeAmount},
	#{entity.dPresentsAmount},
	#{entity.strValidateBeginTime},
	#{entity.strValidateEndTime},
	#{entity.iEnabled},
	#{entity.strEmployeeId},
	#{entity.strEmployeeName},
	#{entity.strEmployeeRealName},
	#{entity.strCreationTime},
	#{entity.strLastAccessedTime}
	)
	</foreach>
</insert>

<!-- 更新 充值 赠送储值信息 -->
<update id="updateRechargePresentsStoredValue" parameterType="com.ecard.entity.RechargePresentsStoredValueEntity">
update tb_rechargePresents_storedValue set
	strActivityId=#{strActivityId},
	dPresentsAmount=#{dPresentsAmount},
	strValidateBeginTime=#{strValidateBeginTime},
	strValidateEndTime=#{strValidateEndTime},
	iEnabled=#{iEnabled},
	strEmployeeId=#{strEmployeeId},
	strEmployeeName=#{strEmployeeName},
	strEmployeeRealName=#{strEmployeeRealName},
	strLastAccessedTime=#{strLastAccessedTime}
	where strPresentsStoredValueId=#{strPresentsStoredValueId}
</update>

<!-- 删除 充值赠送储值信息 -->
<delete id="deleteRechargePresentsStoredValue" parameterType="String">
	delete from tb_rechargePresents_storedValue where strPresentsStoredValueId=#{strPresentsStoredValueId}
</delete>

<!-- 查询 充值赠送储值信息 -->
<select id="selectAllRechargePresentsStoredValue" resultType="com.ecard.entity.RechargePresentsStoredValueEntity" parameterType="String">
select
	strPresentsStoredValueId,
	strActivityId,
	dRechargeAmount,
	dPresentsAmount,
	strValidateBeginTime,
	strValidateEndTime,
	iEnabled,
	strEmployeeId,
	strEmployeeName,
	strEmployeeRealName,
	strCreationTime,
	strLastAccessedTime
	from tb_rechargePresents_storedValue where strActivityId=#{strActivityId} order by strLastAccessedTime desc
</select>

<!-- 新增 充值送积分规则信息 -->
<insert id="insertRechargePresentsIntegration" parameterType="com.ecard.entity.RechargePresentsIntegrationEntity">
insert into tb_rechargePresents_integration
(
strPresentsIntegrationId,
strActivityId,
dPerTimeRechargeAmount,
dLeastRechargeAmount,
iEnabled,
strEmployeeId,
strEmployeeName,
strEmployeeRealName,
strCreationTime,
strLastAccessedTime
)
values
(
#{strPresentsIntegrationId},
#{strActivityId},
#{dPerTimeRechargeAmount},
#{dLeastRechargeAmount},
#{iEnabled},
#{strEmployeeId},
#{strEmployeeName},
#{strEmployeeRealName},
#{strCreationTime},
#{strLastAccessedTime}
)
</insert>

<!-- 判断 赠送积分表中是否已经存在相关活动的已启用记录 -->
<select id="isExistsTheRecord" parameterType="String" resultType="String">
 select strPresentsIntegrationId from tb_rechargePresents_integration where strActivityId=#{strActivityId}
</select>

<!-- 更新  赠送积分表中是否已经存在相关活动的已启用记录 -->
<update id="updateRechargePresentsIntegration" parameterType="com.ecard.entity.RechargePresentsIntegrationEntity">
	update tb_rechargePresents_integration set
	strActivityId=#{strActivityId},
	dPerTimeRechargeAmount=#{dPerTimeRechargeAmount},
	dLeastRechargeAmount=#{dLeastRechargeAmount},
	iEnabled=#{iEnabled},
	strEmployeeId=#{strEmployeeId},
	strEmployeeName=#{strEmployeeName},
	strEmployeeRealName=#{strEmployeeRealName},
	strLastAccessedTime=#{strLastAccessedTime}
    where strPresentsIntegrationId=#{strPresentsIntegrationId}
</update>

<!-- 查询 充值赠送积分规则信息 -->
<select id="selectAllRechargePresentsIntegration" parameterType="String" resultType="com.ecard.entity.RechargePresentsIntegrationEntity">
select 
	strPresentsIntegrationId,
	strActivityId,
	dPerTimeRechargeAmount,
	dLeastRechargeAmount,
	iEnabled,
	strEmployeeId,
	strEmployeeName,
	strEmployeeRealName,
	strCreationTime,
	strLastAccessedTime
	from tb_rechargePresents_integration where strActivityId=#{strActivityId} order by strLastAccessedTime desc
	
</select>

<!-- 新增 活动信息 -->
<insert id="insertPresentsActivityInfo" parameterType="com.ecard.entity.RechargePresentsActivityEntity">
insert into tb_rechargePresents_activity
(
	strActivityId,
	strActivityName,
	strLevelsId,
	strActivityBeginTime,
	strActivityEndTime,
	iActivityKinds,
	strEmployeeId,
	strEmployeeName,
	strEmployeeRealName,
	strCreationTime,
	strLastAccessedTime
)
values
(
	#{strActivityId},
	#{strActivityName},
	#{strLevelsId},
	#{strActivityBeginTime},
	#{strActivityEndTime},
	#{iActivityKinds},
	#{strEmployeeId},
	#{strEmployeeName},
	#{strEmployeeRealName},
	#{strCreationTime},
	#{strLastAccessedTime}
)
</insert>

<!-- 查询 指定会员级别在指定活动类型下是否已经存在数据 -->
<select id="isExistsTheActivityRecord" parameterType="com.ecard.entity.RechargePresentsActivityEntity" resultType="int">
  select count(strActivityId) from tb_rechargePresents_activity where strActivityName=#{strActivityName} and strLevelsId=#{strLevelsId} and iActivityKinds=#{iActivityKinds}
</select>

<!-- 修改 判断该会员级别在该活动类型下是否已经存在规则数据 -->
<select id="isExistsTheActivityRecordId" parameterType="com.ecard.entity.RechargePresentsActivityEntity" resultType="String">
	select strActivityId from tb_rechargePresents_activity where strActivityName=#{strActivityName} and strLevelsId=#{strLevelsId} and iActivityKinds=#{iActivityKinds}
</select>

<!-- 更新活动信息 -->
<update id="updatePresentsActivityInfo" parameterType="com.ecard.entity.RechargePresentsActivityEntity">
update tb_rechargePresents_activity set
	strActivityName=#{strActivityName},
	strLevelsId=#{strLevelsId},
	strActivityBeginTime=#{strActivityBeginTime},
	strActivityEndTime=#{strActivityEndTime},
	iActivityKinds=#{iActivityKinds},
	strEmployeeId=#{strEmployeeId},
	strEmployeeName=#{strEmployeeName},
	strEmployeeRealName=#{strEmployeeRealName},
	strLastAccessedTime=#{strLastAccessedTime}
where strActivityId=#{strActivityId}
</update>

<!-- 查询 全部活动表中总记录 -->
<select id="findCount" resultType="int" parameterType="map">
	select count(*) from tb_rechargePresents_activity
	
	<where>
 	<if test="strSearchMemberLevel!=null and strSearchMemberLevel!=''">
 		and strLevelsId=#{strSearchMemberLevel}
 	</if>
 	
 	
 	</where>
 	
</select>


<!-- 查询 过期活动表中总记录 -->
<select id="findExpiredCount" resultType="int" parameterType="map">
	select count(*) from tb_rechargePresents_activity
	
	<where>
 	<if test="strSearchMemberLevel!=null and strSearchMemberLevel!=''">
 		and strLevelsId=#{strSearchMemberLevel}
 	</if>
 	
 	<if test="strCurrentDate!=null and strCurrentDate!=''">

 		and strActivityEndTime&lt;#{strCurrentDate}
 	</if>
 	</where>
 	
</select>


<!-- 查询 正常活动表中总记录 -->

<select id="findNormalCount" resultType="int" parameterType="map">
	select count(*) from tb_rechargePresents_activity
	
	<where>
 	<if test="strSearchMemberLevel!=null and strSearchMemberLevel!=''">
 		and strLevelsId=#{strSearchMemberLevel}
 	</if>
 	
 	<if test="strCurrentDate!=null and strCurrentDate!=''">
 		and strActivityEndTime&gt;=#{strCurrentDate}
 	</if>
 	</where>
</select>


<!-- 分页查询 活动状态为"全部" 的活动表及活动的所有属性（如：充值赠送积分，赠送抵用券，赠送储值  -->
<select id="selectRechargePresentsActivityInfo" resultType="com.ecard.entity.RechargePresentsActivityEntity" parameterType="map">
 select 
 	strActivityId,
 	strActivityName,
 	strLevelsId,
 	strActivityBeginTime,
 	strActivityEndTime,
 	iActivityKinds,
 	strEmployeeId,
 	strEmployeeName,
 	strEmployeeRealName,
 	strCreationTime,
 	strLastAccessedTime
 	from tb_rechargePresents_activity 
 	<where>
 	<if test="strSearchMemberLevel!=null and strSearchMemberLevel!=''">
 		and strLevelsId=#{strSearchMemberLevel}
 	</if>
 	</where>
 	order by strCreationTime DESC limit #{iPageFrom},#{iPageSize}
</select>

<!-- 分页查询 活动状态为"过期" 的活动表及活动的所有属性（如：充值赠送积分，赠送抵用券，赠送储值  -->
<select id="selectExpiredRechargePresentsActivityInfo" resultType="com.ecard.entity.RechargePresentsActivityEntity" parameterType="map">
 select 
 	strActivityId,
 	strActivityName,
 	strLevelsId,
 	strActivityBeginTime,
 	strActivityEndTime,
 	iActivityKinds,
 	strEmployeeId,
 	strEmployeeName,
 	strEmployeeRealName,
 	strCreationTime,
 	strLastAccessedTime
 	from tb_rechargePresents_activity 
 	<where>
 	<if test="strSearchMemberLevel!=null and strSearchMemberLevel!=''">
 		and strLevelsId=#{strSearchMemberLevel}
 	</if>
 	
 	<if test="strCurrentDate!=null and strCurrentDate!=''">
		and strActivityEndTime&lt;#{strCurrentDate}
 	</if>
 	</where>
 	order by strCreationTime DESC limit #{iPageFrom},#{iPageSize}
</select>

<!-- 分页查询 活动状态为"正常" 的活动表及活动的所有属性（如：充值赠送积分，赠送抵用券，赠送储值  -->
<select id="selectNormalRechargePresentsActivityInfo" resultType="com.ecard.entity.RechargePresentsActivityEntity" parameterType="map">
 select 
 	strActivityId,
 	strActivityName,
 	strLevelsId,
 	strActivityBeginTime,
 	strActivityEndTime,
 	iActivityKinds,
 	strEmployeeId,
 	strEmployeeName,
 	strEmployeeRealName,
 	strCreationTime,
 	strLastAccessedTime
 	from tb_rechargePresents_activity 
 	<where>
 	<if test="strSearchMemberLevel!=null and strSearchMemberLevel!=''">
 		and strLevelsId=#{strSearchMemberLevel}
 	</if>
 	
 	<if test="strCurrentDate!=null and strCurrentDate!=''">
 		and strActivityEndTime &gt;=#{strCurrentDate}
 	</if>
 	</where>
 	order by strCreationTime DESC limit #{iPageFrom},#{iPageSize}
</select>

<!-- 取得会员的级别名称 -->
<select id="getLevelsNameById" parameterType="String" resultType="String">
	select strLevelsName from tb_member_levels where strLevelsId=#{strLevelsId}
</select>

<!-- 删除分页显示页 积分信息 -->
<delete id="deleteRechargePresentsIntegration" parameterType="String">
delete from tb_rechargePresents_integration where strActivityId=#{strActivityId}
</delete>
<!-- 删除分页显示页 抵用券信息 -->
<delete id="batchDeleteRechargePresentsVoucher" parameterType="String">
delete from tb_rechargePresents_voucher where strActivityId=#{strActivityId}
</delete>
<!-- 删除分页显示页 储值券信息 -->
<delete id="batchDeleteRechargePresentsStoredValue" parameterType="String">
delete from tb_rechargePresents_storedValue where strActivityId=#{strActivityId}
</delete>
<!-- 删除分页显示页 活动信息 -->
<delete id="deleteRechargePresentsActivityInfo" parameterType="String">
delete from tb_rechargePresents_activity where strActivityId=#{strActivityId}
</delete>
</mapper>